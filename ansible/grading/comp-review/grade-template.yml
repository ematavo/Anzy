---
- name: Grade template playbook
  hosts: workstation.lab.example.com
  become: false
  vars:
    fact_dir: /home/student/ansible/grading/comp-review/output

  tasks:
    - name: Fail if template variable is not defined
      fail:
        msg: The template variable needs to be passed to this playbook.
      when: template is not defined
      tags: always

    - name: Check if variable file exists
      stat:
        path: "{{ fact_dir }}/template-{{ template[0]['name'] }}.yml"
      register: var_file
      tags: always

    - name: Fail if variable file doesn't exist
      fail:
        msg: "FAIL: {{ template[0]['name'] }} doesn't exist in the {{ template[0]['cluster'] }} clutser."
      when: var_file.stat.exists == False
      tags: always

    - name: Include variables for student work
      include_vars: "{{ fact_dir }}/template-{{ template[0]['name'] }}.yml"
      tags: always

    - name: Compare template name
      assert:
        that: "template[0]['name'] == name"
        fail_msg: "FAIL: Expecting {{ template[0]['name'] }} and got {{ name }}"
        success_msg: "PASS: Expecting {{ template[0]['name'] }} and got {{ name }}"
      tags: check_name

    - name: Compare template description
      assert:
        that: "template.0.description == description"
        fail_msg: "FAIL: Expecting '{{ template.0.description }}' and got '{{ description }}'"
        success_msg: "PASS: Expecting '{{ template.0.description }}' and got '{{ description }}'"
      tags: check_description

    - name: Find cluster file
      shell: grep {{ cluster.id }} {{ fact_dir }}/cluster-*.yml -l
      register: cluster_filename
      changed_when: false
      tags: check_cluster

    - name: Find cluster name
      shell: "grep '^name:' {{ cluster_filename.stdout }} | awk '{ print $2 }'"
      register: cluster_name
      changed_when: false
      tags: check_cluster

    - name: Compare template cluster
      assert:
        that: "template[0]['cluster'] == cluster_name.stdout"
        fail_msg: "FAIL: Expecting {{ template[0]['cluster'] }} and got {{ cluster_name.stdout }}"
        success_msg: "PASS: Expecting {{ template[0]['cluster'] }} and got {{ cluster_name.stdout }}"
      tags: check_cluster
