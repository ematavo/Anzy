---
- name: Grade cluster playbook
  hosts: workstation.lab.example.com
  become: false
  vars:
    fact_dir: /home/student/ansible/grading/comp-review/output

  tasks:
    - name: Fail if cluster variable is not defined
      fail:
        msg: The cluster variable needs to be passed to this playbook.
      when: cluster is not defined
      tags: always

    - name: Check if variable file exists
      stat:
        path: "{{ fact_dir }}/cluster-{{ cluster['name'] }}.yml"
      register: var_file
      tags: always

    - name: Fail if variable file doesn't exist
      fail:
        msg: "FAIL: {{ cluster['name'] }} doesn't exist in the {{ cluster['data_center'] }} data center"
      when: var_file.stat.exists == False
      tags: always

    - name: Include variables for student work
      include_vars: "{{ fact_dir }}/cluster-{{ cluster['name'] }}.yml"
      tags: always

    - name: Compare cluster name
      assert:
        that: "cluster['name'] == name"
        fail_msg: "FAIL: Expecting {{ cluster['name'] }} and got {{ name }}"
        success_msg: "PASS: Expecting {{ cluster['name'] }} and got {{ name }}"
      tags: check_name

    - name: Compare cluster cpu family
      assert:
        that: "cluster['cpu_type'] == cpu['type']"
        fail_msg: "FAIL: Expecting {{ cluster['cpu_type'] }} and got {{ cpu['type'] }}"
        success_msg: "PASS: Expecting {{ cluster['cpu_type'] }} and got {{ cpu['type'] }}"
      tags: check_cpu_family

    - name: Compare cluster cpu architecture
      assert:
        that: "cluster['cpu_arch'] == cpu['architecture']"
        fail_msg: "FAIL: Expecting {{ cluster['cpu_arch'] }} and got {{ cpu['architecture'] }}"
        success_msg: "PASS: Expecting {{ cluster['cpu_arch'] }} and got {{ cpu['architecture'] }}"
      tags: check_cpu_arch

    - name: Compare cluster compatiblity version
      vars:
        the_version: "{{ version['major'] }}.{{ version['minor'] }}"
        expected_version_string: "{{ cluster['compatibility_version'] | string }}"
      assert:
        that: "expected_version_string == the_version"
        fail_msg: "FAIL: Expecting {{ cluster['compatibility_version'] }} and got {{ the_version }}"
        success_msg: "PASS: Expecting {{ cluster['compatibility_version'] }} and got {{ the_version }}"
      tags: check_cpu_compatibility

    - name: Find data center file
      shell: grep {{ data_center.id }} {{ fact_dir }}/dc-*.yml -l
      register: dc_filename
      changed_when: false
      tags: check_data_center

    - name: Find data center name
      shell: "grep '^name:' {{ dc_filename.stdout }} | awk '{ print $2 }'"
      register: dc_name
      changed_when: false
      tags: check_data_center

    - name: Compare cluster data center
      assert:
        that: "cluster['data_center'] == dc_name.stdout"
        fail_msg: "FAIL: Expecting {{ cluster['data_center'] }} and got {{ dc_name.stdout }}"
        success_msg: "PASS: Expecting {{ cluster['data_center'] }} and got {{ dc_name.stdout }}"
      tags: check_data_center
